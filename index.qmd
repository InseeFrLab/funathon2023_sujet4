---
title: "Un Yuka avec Python"
execute:
  cache: true
  keep-ipynb: true
format:
  html:
    code-fold: true
    code-summary: "DÃ©rouler la solution ğŸŸ¡"
---


Ce projet, menÃ© dans le cadre du funathon (hackathon non compÃ©titif) organisÃ© par l'Insee en 2023

##Â Objectif et approche pÃ©dagogique

L'objectif de ce projet est d'apprendre Ã  utiliser `Python` pour crÃ©er des 
applications rÃ©actives avec `Streamlit` mais aussi de se familiariser Ã 
la manipulation de donnÃ©es avec `Python` et, au passage, Ã  quelques bonnes
pratiques utiles pour obtenir des projets plus lisibles et reproductibles. 


Pour parvenir Ã  cet objectif, il est possible d'emprunter plusieurs voies,
plus ou moins guidÃ©es. Celles-ci sont lÃ  pour permettre que ce sujet 
soit rÃ©alisable. Elles sont balisÃ©es de la maniÃ¨re suivante:

| Balisage | Approche | PrÃ©requis de niveau | Objectif pÃ©dagogique |
|--------|---------|----------------|-------------------|
| ğŸŸ¡ | ExÃ©cuter les cellules permet d'obtenir le rÃ©sultat attendu | CapacitÃ© Ã  installer des _packages_ | DÃ©couvrir de nouveaux _packages_ en suivant le fil conducteur du projet, dÃ©couvrir les scripts `Python`, se familiariser avec `Git`  |
| ğŸŸ¢ | Des instructions dÃ©taillÃ©es sur la maniÃ¨re de procÃ©der sont proposÃ©es | ConnaÃ®tre quelques manipulations avec `Pandas` | Apprendre Ã  utiliser certains _packages_ avec un projet guidÃ©, se familiariser avec les projets `Python` plus consÃ©quents que les _notebooks_ `Jupyter` |
| ğŸ”µ | Instructions moins dÃ©taillÃ©es | CapacitÃ© Ã  manipuler des donnÃ©es avec `Pandas` | Apprendre Ã  modulariser du code pour faciliter sa rÃ©utilisation dans une application, dÃ©couvrir la rÃ©cupation de donnÃ©es via des API |
| ğŸ”´ | Peu d'instructions | ExpÃ©rience en dÃ©veloppement de code `Python` | DÃ©couvrir la crÃ©ation d'application ou se familiariser avec l'Ã©cosystÃ¨me `DuckDB` |
| âš« | Autonomie | Bonne maÃ®trise de `Python` et de la ligne de commande Ì€ Linux` | S'initier au dÃ©ploiement d'une application ou Ã  l'ingÃ©nieurie de donnÃ©esÂ |

Le parcours vers la mise en oeuvre d'une application fonctionnelle se fait par Ã©tapes, en sÃ©quenÃ§ant le projet
pour permettre d'avoir un projet lisible, reproductible et modulaire. 

Les Ã©tapes ne sont
pas forcÃ©ment de difficultÃ© graduelle, il s'agit plutÃ´t de sÃ©quencer de maniÃ¨re logique le projet
pour vous faciliter la prise en main.

Il est donc tout Ã  fait possible de passer, selon les parties, d'une voie ğŸŸ¢ Ã  une voie ğŸ”µ ou bien de tester les codes proposÃ©s dans la voie ğŸŸ¡ d'abord puis, une fois que la logique a Ã©tÃ© comprise, essayer de les faire soit-mÃªme via la voie ğŸŸ¢ ou encore essayer via la voie ğŸ”µ, ne pas y parvenir du fait du caractÃ¨re plus succinct des instructions et regarder les instructions de la voie ğŸŸ¢ ou la solution de la voie ğŸŸ¡.

Il est mÃªme tout Ã  fait possible de sauter une Ã©tape et reprendre Ã  partir de la suivante grÃ¢ce aux _checkpoints_ proposÃ©s. 

Les consignes sont encapsulÃ©es dans des boites dÃ©diÃ©es, afin d'Ãªtre sÃ©parÃ©es des explications gÃ©nÃ©rales. Par exemple, la boite verte prendra l'aspect suivant:

::: {.cell .markdown}
<!----- boite ğŸŸ¢ ----->

```{=html}
```{python}
#| echo: false
#| output: asis
from utils_notebook import create_box_level
create_box_level(color = "ğŸŸ¢", title = "Exemple (ğŸŸ¢)")
```
<details>
<summary>DÃ©rouler pour rÃ©vÃ©ler les instructions</summary>
```

Utiliser la fonction `print` pour afficher le texte _"Toto"_

```{=html}
</details>
</div>
```

<!----- end ğŸŸ¢ ----->
:::



alors que sur le mÃªme exercice, si plusieurs voies peuvent emprunter le mÃªme chemin, on 
utilisera une dÃ©limitation grise :

::: {.cell .markdown}
<!----- boite ğŸ”µ ----->

```{=html}
```{python}
#| echo: false
#| output: asis
from utils_notebook import create_box_level
create_box_level(color = "grey", title = "Exemple (ğŸ”µ,ğŸ”´,âš«)")
```
<details>
<summary>DÃ©rouler pour rÃ©vÃ©ler les instructions</summary>
```

Afficher le texte _"Toto"_

```{=html}
</details>
</div>
```

<!----- end ğŸ”µ ----->
:::


La solution associÃ©e, visible pour les personnes sur la voie ğŸŸ¡ sera:

```{python}
#Â Solution pour voie ğŸŸ¡
print("toto")
```


###Â Etapes du projet

Le projet est sÃ©quencÃ© de la maniÃ¨re suivante: 

| Etape | Objectif |
|--------|---------|
| RÃ©cupÃ©ration et nettoyage de la base `OpenFoodFacts` | Lire des donnÃ©es avec `Pandas` depuis un site web (ğŸŸ¡,ğŸŸ¢,ğŸ”µ,ğŸ”´,âš«), appliquer des nettoyages de champs textuels (ğŸŸ¡,ğŸŸ¢,ğŸ”µ,ğŸ”´,âš«), catÃ©goriser ces donnÃ©es avec un classifieur automatique (ğŸŸ¡,ğŸŸ¢,ğŸ”µ,ğŸ”´,âš«) voire entrainer un classifieur _ad hoc_ (ğŸ”´,âš«), Ã©crire ces donnÃ©es sur un systÃ¨me de stockage distant (ğŸŸ¡,ğŸŸ¢,ğŸ”µ,ğŸ”´,âš«) |
| Faire des statistiques agrÃ©gÃ©es par catÃ©gories | Utiliser `Pandas` (ğŸŸ¡,ğŸŸ¢,ğŸ”µ) ou Ì€`DuckDB` (ğŸ”´,âš«) pour faire des statistiques par groupe |
| Trouver un produit dans `OpenFoodFacts` Ã  partir d'un code barre | DÃ©tection visuelle d'un code barre (ğŸŸ¡,ğŸŸ¢,ğŸ”µ, ğŸ”´,âš«), rechercher des donnÃ©es avec des critÃ¨res d'appariement exact comme le code barre via `Pandas` (ğŸŸ¡,ğŸŸ¢,ğŸ”µ) ou Ì€`DuckDB` (ğŸ”´,âš«)  ou via des distances textuelles (ğŸ”´,âš«)|
| Encapsuler ces Ã©tapes dans une application `Streamlit` | Tester une application `Streamlit` minimale (ğŸŸ¡,ğŸŸ¢,ğŸ”µ, ğŸ”´,âš«), personnaliser celle-ci (ğŸ”´,âš« ou ğŸŸ¡,ğŸŸ¢,ğŸ”µ dÃ©sirant se focaliser sur `Streamlit`) |
| Mettre en production cette application | DÃ©ployer grÃ¢ce Ã  des serveurs standardisÃ©s une application `Streamlit` (ğŸ”´,âš«) ou proposer une version sans serveur (âš« voulant se familiariser Ã  `Observable`) |


Le dÃ©veloppement Ã  proprement parler de l'application est donc assez tardif car un certain nombre d'Ã©tapes prÃ©alables sont nÃ©cessaires pour ne pas avoir une application monolithique (ce qui est une bonne pratique). Si vous n'Ãªtes intÃ©ressÃ©s que par dÃ©velopper une application `Streamlit`, vous pouvez directement passer aux Ã©tapes concernÃ©es. 

La premiÃ¨re Ã©tape (_RÃ©cupÃ©ration et nettoyage de la base `OpenFoodFacts`_) peut Ãªtre assez chronophage. Cela est assez reprÃ©sentatif des projets de _data science_ oÃ¹ la majoritÃ© du temps est consacrÃ©e
Ã  la structuration et la manipulation de donnÃ©es. La deuxiÃ¨me Ã©tape (_"Faire des statistiques agrÃ©gÃ©es par catÃ©gories"_) est la moins centrale de ce sujet: si vous manquez de temps vous pouvez la passer
et utiliser directement les morceaux de code mis Ã  disposition. 


### Remarque

Cette page peut Ãªtre consultÃ©e par diffÃ©rents canaux:

- Sur un site web, les codes
faisant office de solution sont, par dÃ©fauts, cachÃ©s. Cela peut Ãªtre pratique
de consulter cette page si vous Ãªtes sur un parcours de couleur diffÃ©rente que le 
jaune et ne voulez pas voir la solution sans le vouloir ;
- Sur un notebook `Jupyter`, les solutions de la voie ğŸŸ¡ sont affichÃ©es par dÃ©faut.
Elles peuvent Ãªtre cachÃ©es en faisant `View` > `Collapse All Code`

### Sources et packages utilisÃ©s

Notre source de rÃ©fÃ©rence sera [`OpenFoodFacts`](https://fr.openfoodfacts.org/), une 
base contributive sur les produits alimentaires. 


::: {.cell .markdown}
```{=html}
<div class="alert alert-warning" role="alert" style="color: rgba(0,0,0,.8); background-color: white; margin-top: 1em; margin-bottom: 1em; margin:1.5625emauto; padding:0 .6rem .8rem!important;overflow:hidden; page-break-inside:avoid; border-radius:.25rem; box-shadow:0 .2rem .5rem rgba(0,0,0,.05),0 0 .05rem rgba(0,0,0,.1); transition:color .25s,background-color .25s,border-color .25s ; border-right: 1px solid #dee2e6 ; border-top: 1px solid #dee2e6 ; border-bottom: 1px solid #dee2e6 ; border-left:.2rem solid #ffc10780;">
<h3 class="alert-heading"><i class="fa fa-lightbulb-o"></i> Hint</h3>
```
Nous utiliserons Ã©galement un classifieur automatique issu du projet [`predicat`](https://github.com/InseeFrLab/predicat).
Il s'agit d'un modÃ¨le qui utilise des noms de produits pour leur associer des catÃ©gories de la
nomenclature [COICOP (Classification des fonctions de consommation des mÃ©nages)](https://www.insee.fr/fr/information/2408172).

Ce modÃ¨le est lÃ  Ã  des fins de dÃ©monstration du principe de la classification automatique et de la maniÃ¨re dont celle-ci
peut Ãªtre intÃ©grÃ©e Ã  un processus de production de donnÃ©es. Il ne s'agit pas d'un modÃ¨le
officiel de l'Insee. 

```{=html}
</div>
```

:::



{{< include _1_recup.qmd >}}
{{< include _2_statistics.qmd >}}
